<Window x:Class="ComponentsDemo.MenuAndCommandsDemoWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ComponentsDemo"
        mc:Ignorable="d"
        Title="MenuAndCommandsDemoWindow" Height="450" Width="800">
    <!-- CommandBindings gibt es auf Window und auch auf Page ebene. Hier werden alle Commands für die Anwendung
    eingetragen. Alle Button/MenuItems/etc bekommen im Property "Command" den gleichen eintrag wie das Command
    welches sie auslösen sollen.
    Vorgefertigte Commands gibt es in mehreren Klassen, z.B: ApplicationCommands, MediaCommands, NavigationCommands
    -->
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.New" Executed="CommandNew_Executed"  />
        <CommandBinding Command="ApplicationCommands.Open" Executed="CommandOpen_Executed" />
        <CommandBinding Command="ApplicationCommands.Close" Executed="CommandClose_Executed"/>
        <!--Falls es kein passendes Command vorgefertigt gibt kann man auch eigene erstellen.-->
        <CommandBinding Command="local:ExampleCommands.Save" Executed="CommandSave_Executed"/>
    </Window.CommandBindings>
    <DockPanel>
        <Menu DockPanel.Dock="Top" >
            <!-- Der Unterstrich vor einem Buchstaben macht diesen zu einem HotKey falls man mit Alt navigieren möchte-->
            <MenuItem Header="_Datei">
                <MenuItem Header="_Neu" Command="ApplicationCommands.New" />
                <MenuItem Header="_Neues Fenster öffnen" Command="ApplicationCommands.New" />
                <MenuItem Header="Öffnen ..." Command="ApplicationCommands.Open"/>
                <MenuItem Header="_Speichern" Command="local:ExampleCommands.Save"/>
                <MenuItem Header="Speichern _unter ..." />
                <Separator />
                <MenuItem Header="Seite einrichten" />
                <MenuItem Header="Drucken" />
                <Separator />
                <!-- Durch das Command werden auch die eingestellten Hotkeys im Menü angezeigt  -->
                <MenuItem Header="Beenden" Command="ApplicationCommands.Close" />
            </MenuItem>
            <MenuItem Header="Allerlei Möglichkeiten">
                <MenuItem Header="Ebene 2">
                    <MenuItem Header="Ebene 3" >
                        <MenuItem Header="Ebene 4" />
                        <MenuItem Header="Ebene 4" />
                        <MenuItem Header="Ebene 4" />
                    </MenuItem>
                    <MenuItem Header="Ebene 3" />
                    <MenuItem Header="Ebene 3" />
                    <MenuItem Header="Ebene 3" />
                </MenuItem>
                <MenuItem Header="Ebene 2" IsCheckable="True" />
                <MenuItem Header="Ebene 2" IsCheckable="True" IsChecked="True" />
                <MenuItem Header="Ebene 2" />
                <MenuItem Header="Ebene 2">
                    <MenuItem.Icon>
                        <Image Source="/Images/checker.bmp"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Hilfe">
                <MenuItem Header="Hilfe anzeigen" />
                <MenuItem Header="Feedback senden" />
                <Separator />
                <MenuItem Header="Info" />
            </MenuItem>
        </Menu>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="20"/>
                <RowDefinition Height="20"/>
                <!--bleibt leer-->
                <RowDefinition Height="20"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!-- Der Save Button nutzt das selbst erstellte Command, wichtig ist das es genau gleich
            geschreiben ist. Ein Click event ist dann nicht mehr nötig. -->
            <Button Content="Save" Command="local:ExampleCommands.Save" Grid.Row="2"/>
            <TextBlock x:Name="tblContent" Grid.Row="3" >
            Speichern funktioniert über verschiedene Wege
            <LineBreak/>
            Strg + S
            <LineBreak/>
            Strg + E
            <LineBreak/>
            Klick auf den Save Button
            <LineBreak/>
            Maus benutzen und in Datei auf Speichern clicken
            <LineBreak/>
            Alt, D, S
            </TextBlock>
        </Grid>
    </DockPanel>
</Window>
